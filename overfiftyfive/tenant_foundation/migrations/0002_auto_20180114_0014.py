# Generated by Django 2.0 on 2018-01-14 00:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tenant_foundation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(blank=True, help_text='The text content of the comment.', null=True, verbose_name='Text')),
                ('last_modified_by', models.ForeignKey(blank=True, help_text='The user whom last modified this comment.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_foundation_comment_last_modified_by_related', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='The user whom owns this comment.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_comment_owner_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': 'o55_comments',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assignment_date', models.DateField(blank=True, help_text='The date that an associate was assigned to the customer.', null=True, verbose_name='Assignment Date')),
                ('is_ongoing', models.BooleanField(default=False, help_text='Track whether this order is ongoing.', verbose_name='Is Active')),
                ('is_cancelled', models.BooleanField(default=False, help_text='Track whether this order was cancelled.', verbose_name='Is Cancelled')),
                ('completion_date', models.DateField(blank=True, help_text='The date that this order was completed.', null=True, verbose_name='Completion Date')),
                ('hours', models.PositiveSmallIntegerField(default=0, help_text='The total amount of hours worked on for this order by the associate.', verbose_name='Hours')),
                ('service_fee', models.PositiveSmallIntegerField(default=0, help_text='The service fee that the customer was charged by the associate..', verbose_name='Service Fee')),
                ('payment_date', models.DateField(blank=True, help_text='The date that this order was paid for.', null=True, verbose_name='Payment Date')),
                ('associate', models.ForeignKey(help_text='The associate of our order.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_order_associate_related', to='tenant_foundation.Associate')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'o55_orders',
            },
        ),
        migrations.CreateModel(
            name='OrderComment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(help_text='The comment of our reference.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_ordercomment_comment_related', to='tenant_foundation.Comment')),
                ('order', models.ForeignKey(help_text='The order of our reference.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_ordercomment_order_related', to='tenant_foundation.Order')),
            ],
            options={
                'verbose_name': 'Order Comment',
                'verbose_name_plural': 'Order Comments',
                'db_table': 'o55_order_comments',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(db_index=True, help_text='The text content of this tag.', max_length=31, verbose_name='Text')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'o55_tags',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='category_tags',
            field=models.ManyToManyField(blank=True, help_text='The category tags that this order belongs to.', related_name='tenant_foundation_order_category_tags_related', to='tenant_foundation.Tag'),
        ),
        migrations.AddField(
            model_name='order',
            name='comments',
            field=models.ManyToManyField(blank=True, help_text='The comments of this order sorted by latest creation date..', related_name='tenant_foundation_order_comments_related', through='tenant_foundation.OrderComment', to='tenant_foundation.Comment'),
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(help_text='The customer of our order.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_order_customer_related', to='tenant_foundation.Customer'),
        ),
    ]
