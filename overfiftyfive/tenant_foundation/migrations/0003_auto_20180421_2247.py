# Generated by Django 2.0.4 on 2018-04-21 22:47

from django.db import migrations, models
import django.db.models.deletion
import tenant_foundation.models.resource_item
import tenant_foundation.models.resource_item_sort_order


class Migration(migrations.Migration):

    dependencies = [
        ('tenant_foundation', '0002_auto_20180421_1740'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResourceItem',
            fields=[
                ('id', models.BigAutoField(db_index=True, default=tenant_foundation.models.resource_item.increment_resource_item_id_number, editable=False, primary_key=True, serialize=False)),
                ('icon', models.CharField(db_index=True, help_text='The icon of this resource item.', max_length=31, unique=True, verbose_name='icon')),
                ('title', models.CharField(db_index=True, help_text='The title of this resource item.', max_length=63, unique=True, verbose_name='title')),
                ('description', models.TextField(blank=True, default='', help_text='A short description of this resource item.', null=True, verbose_name='Description')),
                ('category', models.ForeignKey(blank=True, help_text='The resource category this item belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_resourceitem_resource_categories', to='tenant_foundation.ResourceCategory')),
            ],
            options={
                'verbose_name': 'Resource Item',
                'verbose_name_plural': 'Resource Items',
                'db_table': 'o55_resource_items',
                'permissions': (('can_get_resource_items', 'Can get resource_items'), ('can_get_resource_item', 'Can get resource_item'), ('can_post_resource_item', 'Can create resource_item'), ('can_put_resource_item', 'Can update resource_item'), ('can_delete_resource_item', 'Can delete resource_item')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ResourceItemSortOrder',
            fields=[
                ('id', models.BigAutoField(db_index=True, default=tenant_foundation.models.resource_item_sort_order.increment_resource_item_sort_order_id_number, editable=False, primary_key=True, serialize=False)),
                ('ordering_number', models.PositiveSmallIntegerField(blank=True, default=1, help_text='The ordering number this item will be placed per category.', verbose_name='Ordering Number')),
                ('category', models.ForeignKey(help_text='The resource category this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_resourceitemsortorder_resource_categories', to='tenant_foundation.ResourceCategory')),
                ('item', models.ForeignKey(help_text='The resource item this object belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_resourceitemsortorder_resource_items', to='tenant_foundation.ResourceItem')),
            ],
            options={
                'verbose_name': 'Resource Item Sort Order',
                'verbose_name_plural': 'Resource Item Sort Orders',
                'db_table': 'o55_resource_item_sort_orders',
                'permissions': (('can_get_resource_item_sort_orders', 'Can get resource item sort orders'), ('can_get_resource_item_sort_order', 'Can get resource item sort order'), ('can_post_resource_item_sort_order', 'Can create resource item sort order'), ('can_put_resource_item_sort_order', 'Can update resource item sort order'), ('can_delete_resource_item_sort_order', 'Can delete resource item sort order')),
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='resourcecategory',
            name='sorted_items',
            field=models.ManyToManyField(blank=True, help_text='The items belonging to this category sorted by "ordering_number" field.', through='tenant_foundation.ResourceItemSortOrder', to='tenant_foundation.ResourceItem'),
        ),
    ]
