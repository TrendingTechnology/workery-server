# Generated by Django 2.0.4 on 2018-04-27 18:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tenant_foundation.models.comment
import tenant_foundation.models.customer_comment


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tenant_foundation', '0003_remove_staff_skill_sets'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(db_index=True, default=tenant_foundation.models.comment.increment_comment_id_number, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(blank=True, default='', help_text='The text content of this comment.', null=True, verbose_name='Text')),
                ('created_by', models.ForeignKey(blank=True, help_text='The user whom created this away log.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_comment_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, help_text='The user whom last modified this away log.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_foundation_comment_last_modified_by_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': 'o55_comments',
                'permissions': (('can_get_comments', 'Can get comments'), ('can_get_comment', 'Can get comment'), ('can_post_comment', 'Can create comment'), ('can_put_comment', 'Can update comment'), ('can_delete_comment', 'Can delete comment')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomerComment',
            fields=[
                ('id', models.BigAutoField(db_index=True, default=tenant_foundation.models.customer_comment.increment_customer_comment_id_number, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('about', models.ForeignKey(help_text='The customer whom this comment is about.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_customercomment_about_related', to='tenant_foundation.Customer')),
                ('comment', models.ForeignKey(help_text='The comment this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='tenant_foundation_customercomment_comment_categories', to='tenant_foundation.Comment')),
            ],
            options={
                'verbose_name': 'Customer Comment',
                'verbose_name_plural': 'Customer Comments',
                'db_table': 'o55_customer_comments',
                'ordering': ('-created_at',),
                'permissions': (('can_get_customer_comments', 'Can get customer comments'), ('can_get_customer_comment', 'Can get customer comment'), ('can_post_customer_comment', 'Can create customer comment'), ('can_put_customer_comment', 'Can update customer comment'), ('can_delete_customer_comment', 'Can delete customer comment')),
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='comments',
            field=models.ManyToManyField(blank=True, help_text='The comments belonging to this customer made by other people.', related_name='tenant_foundation_customer_customer_comments_related', through='tenant_foundation.CustomerComment', to='tenant_foundation.Comment'),
        ),
    ]
